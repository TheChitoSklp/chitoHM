Intro to git
-git ignore
when you start a new proyect, default files are created, to tell git to ignore them we can use .gitignore next to file or ignore ALL files in any directory

Commits
-moving around commits    
git init: is used to determine where you going to work   
git add: to add changes made to files at master branch, you can use git add, or git commit -am
git rm: use to delete a file 
git commit: to save changes in local
git config: to config your username and mail
git status: show a list of changes added and files  that are about to be prepared to commit

-undo a commits
git reset --soft delete all history and register of git but keep the changes of staging, so we can apply the latest updates to a new commit.
git reset --hard delete ALL you can't come back if use this comand. 
git reset HEAD This is the command to get files out of the staging area. Not to delete them or anything, just so that the latest changes to these files don't get pushed to the last commit, unless we change our mind and staging them again with git add.

-squash commits

-staging interactive/patch
staigin is a space that is generated in local ram at the time of doing git add , waiting
from git commit


Branches
-git remote
to work with a remote repository use these commands:

git push: finished everything locally, you can send to the server where you have the main branch with this command "git push origin <master>"

git clone: is used when you want to download the whole project in local mode
git fetch: We use it to fetch updates from the remote server and store them in our local repository (if there are any), but without modifying anything in the directory
git merge: It matches the latest changes from the remote server and our working directory.

-pulling comit from another branch
basically it is the fetch and merge command

-name conventions 

-delete a branch
-d --delete, is used to Delete a branch. The branch must be fully merged in its upstream branch, or in HEAD if no upstream was set with --track or --set-upstream-to. -D is a shortcut for --delete --force

You can delete a remote branch using the --delete option to git push. If you want to delete your serverfix branch from the server
 git push origin --delete serverfix

-diference between local and remote branches 
 basically a local branch is where you work and changes can be made, and you cannot move the remote branch and it is stored as a new version
 Rebase/merge
 -solving conflicts
 when you work on another version you may come across a bug in the main branch, when solving that bug and merging the main, a git merge is done to merge them.

 -stash
 git stash: Stash the changes in a dirty working directory away.
 Use stash when you want to record the current state of the working directory and the index, but want to go back to a clean working directory. The command saves your local modifications away and reverts the working directory to match the HEAD commit.

 Gitflow
 
gitflow is an alternative model of branch in git, in this model you use merge branches and more main branches.
to use gitflow need install package of git-flow or ejecute brew install git-flow
the flow that git has is:
1 create a develop branch from main 
2 create a release branch from develop
3 create a deature branch from develop
4 when finish a feature branch, merge with develop
5 when release branch is ready, merge with develop and main branches
6 if detect any problem in main branch, create a hotfix branch from main
7 when finish hotfix branch, merge with develop and main branches
 





//
git init: para inicializar el repositorio git y el staged
git add nombre_del_archivo.txt: enviar el archivo al staged
git status: ver el estado, si se requiere agregar al starget o si se requiere commit
git conf: para ver las posibles configuraciones
git conf --list: para ver la lista de configuraciones hechas
git conf --list --show-origin: para mostrar las configuraciones y sus rutas
git rm --cached nombre_del_archivo.txt: para eliminar el archivo del staged(ram)
git rm nombre_del_archivo.txt: para eliminar del repositorio

LITTLE CHANGE ON GIT SITE


